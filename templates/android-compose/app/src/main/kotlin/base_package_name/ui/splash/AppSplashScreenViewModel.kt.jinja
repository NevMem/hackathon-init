package {{config.base_package_name}}.ui.splash

import android.annotation.SuppressLint
import androidx.compose.runtime.mutableStateOf
import androidx.lifecycle.ViewModel
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.Job
import kotlinx.coroutines.flow.first
import kotlinx.coroutines.launch
import kotlinx.coroutines.withContext

class AppSplashScreenViewModel(
    background: CoroutineScope,
) : ViewModel() {
    enum class Destination {
        Home,
        Login,
    }

    val destination = mutableStateOf<Destination?>(null)

    private val job: Job = background.launch {
        withContext(Dispatchers.Main) {
            destination.value = Destination.Home
            // This implementation should be used for version with authorization
            // if (hasLoggedIn()) {
            //     destination.value = Destination.Login
            // } else {
            //     destination.value = Destination.Main
            // }
        }
    }
}
